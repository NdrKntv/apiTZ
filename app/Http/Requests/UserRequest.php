<?php

namespace App\Http\Requests;

use App\Exceptions\FailedValidationException;
use Illuminate\Contracts\Validation\Validator;
use Illuminate\Foundation\Http\FormRequest;
use Symfony\Component\HttpKernel\Exception\ConflictHttpException;

class UserRequest extends FormRequest
{
    public function authorize()
    {
        return true;
    }

    public function rules()
    {
//        $emailRegex = "<^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\])$>";
        return [
            'name' => ['required', 'string', 'min:2', 'max:60'],
            'email' => ['required', 'email', 'unique:users'],
            'phone' => ['required', 'string', 'unique:users', 'regex:/^[\+]380([0-9]{9})$/'],
            'position_id' => ['required', 'int', 'exists:positions,id'],
            'photo' => ['required', 'image', 'max:5000', 'mimes:jpg,jpeg', 'dimensions:min_width=70,min_height=70']
        ];
    }

    protected function failedValidation(Validator $validator)
    {
        if (request()->wantsJson()) {
            $failedRules = $validator->failed();
            if (isset($failedRules['email']['Unique']) || isset($failedRules['phone']['Unique'])) {
                throw new ConflictHttpException('User with this phone or email already exist');
            }

            throw new FailedValidationException($validator->errors());
        }
        parent::failedValidation($validator); // TODO: Change the autogenerated stub
    }
}
